{"version":3,"sources":["components/Form.js","components/Result.js","components/Message.js","components/Spinner.js","App.js","helper.js","serviceWorker.js","index.js"],"names":["Form","state","amount","term","handleSumbit","e","preventDefault","_this$state","_this","props","loanInformation","handleChange","_e$target","target","name","value","setState","Object","defineProperty","Number","validateForm","_this$state2","react_default","a","createElement","onSubmit","this","onChange","className","type","placeholder","disabled","Component","Result","total","toFixed","Message","Spinner","App","loading","totalAmount","totalTerm","calculateTotal","setTimeout","component","components_Spinner","components_Result","components_Message","react","components_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0bf834f3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n    state = { \r\n        amount: '',\r\n        term: ''\r\n     }\r\n\r\n    handleSumbit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Read the value from the state\r\n        const {amount, term} = this.state;\r\n\r\n        // pass the data to the main component\r\n        this.props.loanInformation(amount, term);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        // Read form data\r\n        const { name, value } = e.target;\r\n\r\n        // Update the state\r\n        this.setState({\r\n            [name] : Number(value)\r\n        })\r\n    }\r\n\r\n    validateForm = () => {\r\n        // destructuring\r\n        const {amount, term} = this.state;\r\n\r\n        const notValid = !amount || !term;\r\n\r\n        return notValid;\r\n    }\r\n\r\n\r\n    render() { \r\n\r\n        // Extract some contents from the state\r\n        // const {amount} = this.state;\r\n\r\n        return ( \r\n            <form onSubmit={this.handleSumbit}>\r\n                <div>\r\n                    <label>Lånebeløp</label>\r\n                    <input \r\n                        onChange={this.handleChange}\r\n                        name=\"amount\" \r\n                        className=\"u-full-width\" \r\n                        type=\"number\" \r\n                        placeholder=\"For eks. 5000\" />\r\n                </div>\r\n                <div>\r\n                    <label>Nedbetalingstid</label>\r\n                    <select \r\n                        onChange={this.handleChange}\r\n                        name=\"term\" \r\n                        className=\"u-full-width\">\r\n                        <option value=\"\">Velg</option>\r\n                        <option value=\"3\">3 måneder</option>\r\n                        <option value=\"6\">6 måneder</option>\r\n                        <option value=\"12\">12 måneder</option>\r\n                        <option value=\"24\">24 måneder</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <input \r\n                        disabled={this.validateForm()}\r\n                        type=\"submit\" \r\n                        value=\"Beregn\" \r\n                        className=\"u-full-width button-primary\" />\r\n                </div>\r\n            </form>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\n\r\nconst Result = (props) => {\r\n    // console.log(props);\r\n    return ( \r\n        <div className=\"u-full-width result\">\r\n            <h2>Resultat:</h2>\r\n            <p>Lånebeløp: Kr {props.amount}</p>\r\n            <p>Nedbetalingstid: {props.term} måneder</p>\r\n            <p>Total lån og renter: Kr {props.total}</p>\r\n            <p>Månedlig termin: Kr { (props.total / props.term).toFixed(2) }</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Result;","import React from 'react';\r\n\r\nconst Message = () => (\r\n    <p>Skriv inn ønsket lånebeløp og velg nedbetalingstid</p>\r\n)\r\n \r\nexport default Message;\r\n","import React from 'react';\r\nimport '../spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n        <div className=\"spinner\">\r\n            <div className=\"dot1\"></div>\r\n            <div className=\"dot2\"></div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Spinner;","import React, { Component, Fragment } from 'react';\nimport './normalize.css';\nimport './skeleton.css';\nimport Form from './components/Form';\nimport {calculateTotal} from './helper';\nimport Result from './components/Result';\nimport Message from './components/Message';\nimport Spinner from './components/Spinner';\n\nclass App extends Component {\n\n  state = {\n    total: '',\n    amount: '',\n    term: '',\n    loading: false\n  }\n\n  loanInformation = (amount, term) => {\n\n    const total = calculateTotal(amount, term);\n\n    this.setState({\n      loading: true\n    }, () => {\n      setTimeout(() => {\n        this.setState({\n          amount,\n          total,\n          term,\n          loading: false\n        })\n      }, 3000)\n    })\n  }\n  render() {\n    // destructuring the state\n    const {term, amount, total, loading} = this.state;\n\n    // Conditionally render a component\n    let component;\n    if(total === '' && !loading) {\n      component = <Message />\n    } else if(loading) {\n      component = <Spinner />\n    } else {\n      component = <Result \n                    total={total}\n                    amount={amount}\n                    term={term}\n                  />\n    }\n    return (\n      <Fragment>\n        <h1>Lånekalkulator</h1>\n        <div className=\"container\">\n          <Form \n            loanInformation={this.loanInformation}\n          />\n\n          <div className=\"messages\">\n            {component}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","export function calculateTotal(amount, term) {\r\n    \r\n    // Calculate the Total interest based on the amount\r\n    // 0 - 1000 = 25%\r\n    // 1001 - 5000 = 20%\r\n    // 5001 - 10000 = 15%\r\n    // +10000 = 10%\r\n    let totalAmount;\r\n    if(amount <= 1000) {\r\n        totalAmount = amount * 0.25;\r\n    } else if(amount > 1000 && amount <= 5000) {\r\n        totalAmount = amount * 0.20;\r\n    } else if(amount > 5000 && amount <= 10000) {\r\n        totalAmount = amount * 0.15;\r\n    } else {\r\n        totalAmount = amount * 0.10;\r\n    }\r\n\r\n    \r\n\r\n    // Calculate the Total interest based on the time\r\n    // 3 - 5%\r\n    // 6 - 10%\r\n    // 12 - 15%\r\n    // 24 - 20%\r\n    let totalTerm;\r\n\r\n    switch(term){\r\n        case 3:\r\n            totalTerm = amount * 0.05;\r\n            break;\r\n        case 6:\r\n            totalTerm = amount * 0.10;\r\n            break;\r\n        case 12:\r\n            totalTerm = amount * 0.15;\r\n            break;\r\n        case 24:\r\n            totalTerm = amount * 0.20;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    \r\n    return amount + totalAmount + totalTerm;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}